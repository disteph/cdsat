=====================================================
         	PSYCHE,
The Proof-Search factorY for Collaborative HEuristics
=====================================================


LICENSING

This program is free software; you can redistribute it and/or modify
it under the terms of the CeCILL-C FREE SOFTWARE LICENSE.

You should have received a copy of the CeCILL-C License with this
Kit, in the file named "LICENSE.txt".
If not, visit http://www.cecill.info


===================
COMPILING:

The source can be compiled with OCaml 4.00* (with ocamlbuild) and findlib
>= 1.3.2:

- Configuration: run

  ocaml setup.ml -configure
  
  which outputs the current configuration on the standard
  output. Edit setup.data to modify the settings.

- Compilation: run

  ocaml setup.ml -build

- Installation (optional):

  ocaml setup.ml -install 

  which installs the compiled executable at the location indicated at
  configuration time (default is /usr/local/bin/). This step may
  require admin roots.

- Uninstallation:

  ocaml setup.ml -uninstall

  This step may require admin roots.

- Clean up:

  ocaml setup.ml -distclean

- Oasis: 

  The files setup.ml (and myocamlbuild.ml) included in the
  distribution are automatically generated by OASIS (we use version
  0.3.0) from input file _oasis. If you have oasis installed on your
  machine, you may modify _oasis and regenerate setup.ml by the
  command oasis setup.

====================
API in html format

You can generate it by running:
oasis setup
ocaml setup.ml -configure
ocaml setup.ml -doc
ocaml setup.ml -install

===================
RUNNING PSYCHE:

If you did a local installation (without running 
'ocaml setup.ml -install'), a main.native executable file has been
created, at the root of the directory containing the sources of Psyche.

If you did go through the installation (running
'ocaml setup.ml -install'), you dispose of a

psyche

executable, installed in the directory specified in your configuration.

A command-line argument will be considered as the file name or
directory name to treat.  If no argument is given, the standard input
will be used (unless the -examples option is used, see below).

Available options are:
  -theory selects theory (among empty, lia; default is empty)
  -gplugin selects generic plugin (among naive, dpll_pat, dpll_wl; default is dpll_wl)
  -latex allows latex output
  -alphasort treats input files in alphabetical order (default is from smaller to bigger)
  -examples treats theory examples instead of standard input
  -noweakenings disallows conflict analysis
  -debug decides level of debug printing (0,1,2); 0 is no debug
  -printrhs when debug printing allowed, prints right-hand sides of sequents
  -nomemo disallows memoisation
  -noalmo memoisation is done on exact match only
  -nounitpropagation disallows eager unit propagation in MyPatricia
  -help  Display this list of options
  --help  Display this list of options
